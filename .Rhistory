lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
xlab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
legend(
"topleft",
c(levels(DS$esame), "media"),
bty="n",
pch=c(15,15,15,15,NA),
lty=c(NA,NA,NA,NA,2),
col=c("red","blue","gold","green","black"),
cex=0.7)
View(DS)
v1<-c(1,2,3) #creazione di un vettore
v2<-c("analisi","statistica","economia")
v3<-c(24,27,29)
DS<-data.frame(v1,v2,v3) #creazione di un Dataframe
str(DS) #struttura del dataframe
dim(DS) #dimensioni del dataframe
dim(DS)[1]
nrow(DS) #numero righe
ncol(DS) #numero colonne
dimnames(DS)
row.names(DS)<-c("riga1","riga2","riga3") #cambiare nome di riga
library(readxl)
prova_4 <- read_excel("C:/Users/denis/OneDrive/Desktop/prova_4.xlsx") #importare dati da exel
View(prova_4)
prova_4$sesso<-as.factor(prova_4$sesso)
str(prova_4)
levels(prova_4$sesso)<-c("maschio","femmina") #trasformare il vettore in stringa
prova_4$sesso
table(prova_4$sesso)
names(prova_4)[3]<-"sex" #cambiare nome alla variabile sesso
names(prova_4)[3]<-"sesso"
prova_5<-prova_4[,-1]
View(prova_5)
savehistory("C:/Users/denis/OneDrive/Desktop/Nuova cartella/script_1.Rhistory")
x<-c(3,1,2,5,6,7,4)
y<-c(15,18,21,13,18,30,19)
DS_grafico<-data.frame(x,y)
DS_grafico
DS_grafico_order<-DS_grafico[order(DS_grafico$x),]
DS_grafico_order
plot(y~x,
data=DS_grafico_order,
type="l") #creazione di un grafico semplice
plot(y~x,
data=DS_grafico_order,
type="l",
col="blue",
lwd=3,
ylab="voto",
xlab="Numero esami",
main="andamento esami",
col.main="red",
cex.main=3,
font.main=4,
family="serif",
cex.lab=1,
font.lab=1,
col.lab="pink") #perfezionamento grafico
abline(h=mean(DS_grafico_order$y,na.rm = TRUE),
lty=2,
col="red") #aggiungere una linea che rappresenta la media
legend("top",
c("voto esame","media esame"),
lty=c(1,2),
bty="n",
col=c("blue","red")) #creazione della leggenda
library(readxl)
DS <- read_excel("C:/Users/denis/OneDrive/Desktop/DS.xlsx")
View(DS)
DS <- read_excel("C:/Users/denis/OneDrive/Desktop/DS.xlsx")
View(DS)
DS$esame<-as.factor(DS$esame)
str(DS)
levels(DS$esame)<-c("Algebra","Geometria","Calcolo delle Probabilita/Statistica","Analisi Matematica")
DS$data_esame_scritto_Y<-format(as.Date(DS$data_esame_scritto),format="%Y")
DS$data_esame_scritto_Y
Tbl_1<-table(
DS[DS$esito_esame_scritto == 1, ]$esame,
DS[DS$esito_esame_scritto == 1, ]$data_esame_scritto_Y)
Tbl_1
Tbl_2<-Tbl_1[, c(4,5,6,7)]
Tbl_2
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
ylab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
xlab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
legend(
"topleft",
c(levels(DS$esame), "media"),
bty="n",
pch=c(15,15,15,15,NA),
lty=c(NA,NA,NA,NA,2),
col=c("red","blue","gold","green","black"),
cex=0.7)
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_grafico_2.Rhistory")
View(DS)
A<-matrix(c(13,45,37,44,17,83,97,11,15,34,97,64,47,88,19,20),4,4)#creazione di una matrice
A
A1<-matrix(c(13,45,37,44,17,83,97,11,15,34,97,64,47,88,19,20),4,4,byrow=TRUE)
A1 #ordinamento per riga
length(A) #lunghezza della matrice
mode(A) #indica di che tipo sono gli elementi al suo interno
dim(A) #la sua dimensione
A[3,2] #estrae l'elemento di terza riga e seconda colonna
A[ ,2] #estrae gli elementi della seconda colonna
A[2, ] #estrae elementi della seconda riga
A<-cbind(A,c(532,939,213,329)) #come aggiungere una colonna
A
A<-rbind(A,c(156,199,253,369,243)) #come aggiungere una riga
A
A[ ,c(1,2,3)] #estrae le prime tre colonne
A[ ,c(1:3)] #estrae dalla prima alla terza colonna
A[c(1,2,3), ] #estrae le prime tre righe
A[c(1:3), ] #estrae dalla prima alla terza riga
A[A[ ,1]>10,c(1,3)]
A[A[ ,1]>100,c(1,3)]
D<-diag(c(1,2,3,4,5),5,5) #creazione di una matrice diagonale
D
B<-matrix(c(16,32,78,54,66,29,80,75,41,84,20,112,59,69,62,87,43,221,111,234),5,5,byrow=FALSE)
C<-A+B
C
C<-A-B     # operazioni tra matrici
C
C<-A*B
C
#a)generare una matrice 4x4 piena di multipli di 3;
#b)calcolare il valore medio dei numeri contenuti nella matrice;
#c)generare una nuova matrice 2x2 estraendo dalla prima matrice le prime 2 righe e le prime 2 colonne;
#d)calcolare il valore medio dei numeri contenuti nella nuova matrice e infine chiedere a R quali dei 2 valori medi Ã¨ piu grande
x<-sample(c(1:1000),16)
x<-x*3
x
M_1<-matrix(x,4,4,byrow=TRUE)
M_1
mean_M_1<-mean(x)
mean_M_1
M_2<-M_1[c(1,2),c(1,2)]
M_2
mean_M_2<-mean(as.vector(M_2))
mean_M_2
max(mean_M_1,mean_M_2)
#a)generare un vettore numerico di 20 elementi,composto della serie di numeri che comincia con 1 e arriva a 29,5,con intervallo pari a 1.5;
#b)selezionare gli elementi del vettore aventi valore >10;
#c)calcolare la somma di tali elementi e riportarla come risultato finale dell'esercizio
y<-seq(from=1,to=29.5,by=1.5)
y
y_mag10<-y[y>10]
y_mag10
sum(y_mag10)
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_matrici.Rhistory")
v1<-c(1,2,3) #creazione di un vettore
v2<-c("analisi","statistica","economia")
v3<-c(24,27,29)
DS<-data.frame(v1,v2,v3) #creazione di un Dataframe
str(DS) #struttura del dataframe
dim(DS) #dimensioni del dataframe
dim(DS)[1]
nrow(DS) #numero righe
ncol(DS) #numero colonne
dimnames(DS)
row.names(DS)<-c("riga1","riga2","riga3") #cambiare nome di riga
library(readxl)
prova_4 <- read_excel("C:/Users/denis/OneDrive/Desktop/prova_4.xlsx") #importare dati da exel
View(prova_4)
prova_4$sesso<-as.factor(prova_4$sesso)
str(prova_4)
levels(prova_4$sesso)<-c("maschio","femmina") #trasformare il vettore in stringa
prova_4$sesso
table(prova_4$sesso)
names(prova_4)[3]<-"sex" #cambiare nome alla variabile sesso
names(prova_4)[3]<-"sesso"
prova_5<-prova_4[,-1]
View(prova_5)
savehistory("C:/Users/denis/OneDrive/Desktop/Nuova cartella/script_1.Rhistory")
x<-c(3,1,2,5,6,7,4)
y<-c(15,18,21,13,18,30,19)
DS_grafico<-data.frame(x,y)
DS_grafico
DS_grafico_order<-DS_grafico[order(DS_grafico$x),]
DS_grafico_order
plot(y~x,
data=DS_grafico_order,
type="l") #creazione di un grafico semplice
plot(y~x,
data=DS_grafico_order,
type="l",
col="blue",
lwd=3,
ylab="voto",
xlab="Numero esami",
main="andamento esami",
col.main="red",
cex.main=3,
font.main=4,
family="serif",
cex.lab=1,
font.lab=1,
col.lab="pink") #perfezionamento grafico
abline(h=mean(DS_grafico_order$y,na.rm = TRUE),
lty=2,
col="red") #aggiungere una linea che rappresenta la media
legend("top",
c("voto esame","media esame"),
lty=c(1,2),
bty="n",
col=c("blue","red")) #creazione della leggenda
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_grafico_1.Rhistory")
View(DS)
View(DS_grafico)
View(DS_grafico_order)
v1<-c(1,2,3) #creazione di un vettore
v2<-c("analisi","statistica","economia")
v3<-c(24,27,29)
DS<-data.frame(v1,v2,v3) #creazione di un Dataframe
str(DS) #struttura del dataframe
dim(DS) #dimensioni del dataframe
dim(DS)[1]
nrow(DS) #numero righe
ncol(DS) #numero colonne
dimnames(DS)
row.names(DS)<-c("riga1","riga2","riga3") #cambiare nome di riga
library(readxl)
prova_4 <- read_excel("C:/Users/denis/OneDrive/Desktop/progetto/prova_4.xlsx")
View(prova_4)
prova_4$sesso<-as.factor(prova_4$sesso)
str(prova_4)
levels(prova_4$sesso)<-c("maschio","femmina") #trasformare il vettore in stringa
prova_4$sesso
table(prova_4$sesso)
names(prova_4)[3]<-"sex" #cambiare nome alla variabile sesso
names(prova_4)[3]<-"sesso"
prova_5<-prova_4[,-1]
View(prova_5)
savehistory("C:/Users/denis/OneDrive/Desktop/Nuova cartella/script_1.Rhistory")
x<-c(3,1,2,5,6,7,4)
y<-c(15,18,21,13,18,30,19)
DS_grafico<-data.frame(x,y)
DS_grafico
DS_grafico_order<-DS_grafico[order(DS_grafico$x),]
DS_grafico_order
plot(y~x,
data=DS_grafico_order,
type="l",
col="blue",
lwd=3,
ylab="voto",
xlab="Numero esami",
main="andamento esami",
col.main="red",
cex.main=3,
font.main=4,
family="serif",
cex.lab=1,
font.lab=1,
col.lab="pink") #perfezionamento grafico
abline(h=mean(DS_grafico_order$y,na.rm = TRUE),
lty=2,
col="red") #aggiungere una linea che rappresenta la media
legend("top",
c("voto esame","media esame"),
lty=c(1,2),
bty="n",
col=c("blue","red")) #creazione della leggenda
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_grafico_1.Rhistory")
library(readxl)
DS <- read_excel("C:/Users/denis/OneDrive/Desktop/progetto/DS.xlsx")
View(DS)
DS$esame<-as.factor(DS$esame)
str(DS)
levels(DS$esame)<-c("Algebra","Geometria","Calcolo delle Probabilita/Statistica","Analisi Matematica")
DS$data_esame_scritto_Y<-format(as.Date(DS$data_esame_scritto),format="%Y")
DS$data_esame_scritto_Y
Tbl_1<-table(
DS[DS$esito_esame_scritto == 1, ]$esame,
DS[DS$esito_esame_scritto == 1, ]$data_esame_scritto_Y)
Tbl_1
Tbl_2<-Tbl_1[, c(4,5,6,7)]
Tbl_2
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
ylab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
xlab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
legend(
"topleft",
c(levels(DS$esame), "media"),
bty="n",
pch=c(15,15,15,15,NA),
lty=c(NA,NA,NA,NA,2),
col=c("red","blue","gold","green","black"),
cex=0.7)
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_grafico_2.Rhistory")
library(readxl)
DS <- read_excel("./DS.xlsx")
View(DS)
DS$esame<-as.factor(DS$esame)
str(DS)
levels(DS$esame)<-c("Algebra","Geometria","Calcolo delle Probabilita/Statistica","Analisi Matematica")
DS$data_esame_scritto_Y<-format(as.Date(DS$data_esame_scritto),format="%Y")
DS$data_esame_scritto_Y
Tbl_1<-table(
DS[DS$esito_esame_scritto == 1, ]$esame,
DS[DS$esito_esame_scritto == 1, ]$data_esame_scritto_Y)
Tbl_1
Tbl_2<-Tbl_1[, c(4,5,6,7)]
Tbl_2
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
ylab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
barplot(
Tbl_2,
beside=TRUE,
col=c("red","blue","gold","green"),
xlab="Numero di studenti che hanno passato l'esame scritto")
abline(
h=mean(Tbl_2[levels(DS$esame) [1], ]),
lty=2,
col="red")
abline(
h=mean(Tbl_2[levels(DS$esame) [2], ]),
lty=2,
col="blue")
abline(
h=mean(Tbl_2[levels(DS$esame) [3], ]),
lty=2,
col="gold")
abline(
h=mean(Tbl_2[levels(DS$esame) [4], ]),
lty=2,
col="green")
legend(
"topleft",
c(levels(DS$esame), "media"),
bty="n",
pch=c(15,15,15,15,NA),
lty=c(NA,NA,NA,NA,2),
col=c("red","blue","gold","green","black"),
cex=0.7)
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_grafico_2.Rhistory")
A<-matrix(c(13,45,37,44,17,83,97,11,15,34,97,64,47,88,19,20),4,4)#creazione di una matrice
A
A1<-matrix(c(13,45,37,44,17,83,97,11,15,34,97,64,47,88,19,20),4,4,byrow=TRUE)
A1 #ordinamento per riga
length(A) #lunghezza della matrice
mode(A) #indica di che tipo sono gli elementi al suo interno
dim(A) #la sua dimensione
A[3,2] #estrae l'elemento di terza riga e seconda colonna
A[ ,2] #estrae gli elementi della seconda colonna
A[2, ] #estrae elementi della seconda riga
A<-cbind(A,c(532,939,213,329)) #come aggiungere una colonna
A
A<-rbind(A,c(156,199,253,369,243)) #come aggiungere una riga
A
A[ ,c(1,2,3)] #estrae le prime tre colonne
A[ ,c(1:3)] #estrae dalla prima alla terza colonna
A[c(1,2,3), ] #estrae le prime tre righe
A[c(1:3), ] #estrae dalla prima alla terza riga
A[A[ ,1]>10,c(1,3)]
A[A[ ,1]>100,c(1,3)]
D<-diag(c(1,2,3,4,5),5,5) #creazione di una matrice diagonale
D
B<-matrix(c(16,32,78,54,66,29,80,75,41,84,20,112,59,69,62,87,43,221,111,234),5,5,byrow=FALSE)
C<-A+B
C
C<-A-B     # operazioni tra matrici
C
C<-A*B
C
#a)generare una matrice 4x4 piena di multipli di 3;
#b)calcolare il valore medio dei numeri contenuti nella matrice;
#c)generare una nuova matrice 2x2 estraendo dalla prima matrice le prime 2 righe e le prime 2 colonne;
#d)calcolare il valore medio dei numeri contenuti nella nuova matrice e infine chiedere a R quali dei 2 valori medi ÃÂ¨ piu grande
x<-sample(c(1:1000),16)
x<-x*3
x
M_1<-matrix(x,4,4,byrow=TRUE)
M_1
mean_M_1<-mean(x)
mean_M_1
M_2<-M_1[c(1,2),c(1,2)]
M_2
mean_M_2<-mean(as.vector(M_2))
mean_M_2
max(mean_M_1,mean_M_2)
#a)generare un vettore numerico di 20 elementi,composto della serie di numeri che comincia con 1 e arriva a 29,5,con intervallo pari a 1.5;
#b)selezionare gli elementi del vettore aventi valore >10;
#c)calcolare la somma di tali elementi e riportarla come risultato finale dell'esercizio
y<-seq(from=1,to=29.5,by=1.5)
y
y_mag10<-y[y>10]
y_mag10
sum(y_mag10)
savehistory("C:/Users/denis/OneDrive/Desktop/proggetto_grafico_1/script_progetto_matrici.Rhistory")
